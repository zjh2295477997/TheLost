问题：
1.在遍历数组时，不可直接在循环体内操作数组，需要用替代数组解决问题。

2.石头层滚动一开始加载石头直接显示在屏幕上。
    猜想：资源未预加载。[ok]

3.加载三级场景时有的短精灵悬空[ok]

4.客户端发送post请求参数中文后台接收乱码！[2018年3月27日00:01:08]
     传递参数的代码所在的文件和接收参数所在的代码文编码必须一致！！！而且前后端也是如此！！！【ok】

5.以后先做下落运动！！！注意下落动作就是由于重力造成的！，所以跳的设计直接可以做向上运动的动作



6.水下模式左右边界角色处理bug过多！   =====

7.低空模式角色闪烁会有不见的bug【ok】

8.水果生成的排列不恰当【ok】

9.奖励关与主游戏场景切换不对     【ok】
    【原因：之前游戏场景GameScene的构造函数没有调用，使用了onEnter函数，导致每次enter之后背景什么的对象都重新创建
    所以没有那这种暂停的数据。】
    【启发，代码的顺序、运行机理（生命周期）需要很清晰，不可乱来】

10. 各障碍物生成机制、摆放位置不太合理

11.游戏结束框位置每次弹出需要计算，正常情况下ui显示也固定  【ok】

12.游戏结束后点击屏幕还有事件监听问题，有时候结束框不弹出！【ok】

13. coreView层中的gameSceneUI导致游戏触摸监听失灵,gameOver弹出时可能也导致触控失灵【ok】
    由cocostudio导出的ui组件显示在游戏画面中吞噬游戏画面触屏监听问题
    有两种方式解决（都很简单完美）：
    1. 在Cocostudio的UI编辑器里做手脚，设置顶层的Panel属性，把“交互”前面的勾去掉（推荐）
    2. 在代码里处理，加载UI后，直接调用UI的setTouchEnable(false)就可以了（函数拼写可能有错误）


内容：
    1.场景皮肤切换机制
    2.角色切换
    3.游戏模式切换机制
    4.二级场景障碍物生成机制
        4.1 障碍物滚动随机生成机制
    5.角色与障碍物碰撞检测
    6.角色跳跃场景各层上下移动效果


编程技术要点：
    1.sprite.getBoundingBox()获取的是放缩等操作实际的轮廓
    2.加载顺序、构造函数调用、生命周期需要理清楚
    3.层之间的关系、层内放何种内容，需要灵活掌握（参见游戏过程中的ui层）
    4.js中各种回调涉及到的this，可以使用变量指向，减轻混淆


bug: 从比较高的高处掉落碰撞不了。因为掉落速度过快
    场景跟随角色上下滚动设计有问题（分层场景速度应不同，滚动下落感觉有问题）